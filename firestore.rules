rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function isAdmin() {
      return request.auth != null &&
        request.auth.token.email in [
          "ethancho12@gmail.com" // NEXT_PUBLIC_ADMIN_EMAILS와 일치
        ];
    }
    // 공개 읽기
    match /ideas/{doc} { allow read: if true; allow write: if false; }
    match /comments/{doc} { allow read: if true; allow create: if isSignedIn(); }
    match /votes/{doc} { allow read: if true; allow create: if isSignedIn(); }
    match /bookmarks/{doc} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow delete: if isSignedIn();
      allow update: if false;
    }

    // 기타는 기본 차단
    match /{document=**} { allow read: if false; allow write: if false; }
    match /votes/{id} {
      allow read: if true;
      allow create: if isSignedIn();
    }
    match /comments/{id} {
      allow read: if true;
      allow create: if isSignedIn();
    }
    // Bookmarks: one per user per idea (id = ideaId_uid)
    match /bookmarks/{bookmarkId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn()
        && request.resource.data.ideaId is string
        && request.resource.data.userUid == request.auth.uid
        && bookmarkId == (request.resource.data.ideaId + "_" + request.auth.uid);
      allow delete: if isSignedIn()
        && resource.data.userUid == request.auth.uid;
      allow update: if false;
    }
  }
}
